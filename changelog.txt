 - KML service support:
    - Provides a RESTful wrapper around existing MapGuide KML services
 - #71: Record client agent and IP address when creating a MgSiteConnection
 - #73: Fix layered PDF plotting for maps with base layer groups
 - #77: Add missing REST API documentation for EnumerateMapLayers route
 - #75: Features routes now support pagination. CZML representation does not support pagination.
 - #76: Add HTML representation for features routes. This displays features attributes in a HTML table.
 - Improved HTML representation of site repository
    - All resource links in a resource list now open a separate resource info view. All action links have been moved here.
    - Add informative placeholders for resources with no data items or references
    - Fix permission issue in preview route
    - Add missing CSS for some XSL stylesheets
 - #78: mapguide-rest is now localization-ready

0.10
====

 - #55: Feature query routes for Layer Definitions now pre-evaluate elevation settings
 - #56: Experimental Cesium CZML support
 - #62: Support for layer-specific vector tiles
 - #63: Add download file support for most GET urls.
 - #64: Fixed bad download links on resource data list HTML representation
 - #65: You can now use un-qualified class names for specifying the data source in restcfg.json
 - #66: Only override REQUEST_URI with UNENCODED_URL if UNENCODED_URL actually exists
 - #67: Fix chunked response headers failing to be sent
 - #68: Handle maxscale = infinity properly for sample applications
 - #69: Support Layer Definitions as data sources in restcfg.json
 - Samples now use:
    - OpenLayers 3 final
    - Cesium 1.1

0.9
===

 - PDF output support
    - Uses same routes as DWF plotting, except a pdf extension is used instead of dwf
        - The pagewidth and pageheight parameters have been replaced with papersize parameter, which can be any value of: A3,A4,A5,Letter,Legal
    - Additional support for producing layered PDF output from a session-based map
 - #59: Feature query routes (selecting features) no longer require authentication challenge
 - #26: Output feature query response content as we iterate through the reader
 - Ant build system support. Phing still required for API doc generation.
 - "features" representation support for routes to Layer Definitions. Includes pre-eval'd tooltip and hyperlink values for each feature if specified.
    - GET /library/{resourcePath}.LayerDefinition/features.{type}
 - External libraries no longer included in source. Checkout footprint is significantly reduced. Developers are expected to use PHP Composer to pull in these libraries after checkout. Does not affect release archives.
 - Improved GeoJSON output
    - Features with single identity properties will have that property written out as the "id" attribute
 - Improved tile cache resiliency
    - Failed tile rendering requests can be retried up to a certain limit before bailing out with an error.
 - New/updated samples
    - Cesium example consuming GeoJSON served by mapguide-rest
    - New ol3 sample with dynamic GeoJSON vector layers

0.8
===

 - New Experimental XYZ tile support
 - New Experimental XYZ GeoJSON vector tile support
 - New sample applications included
    - XYZ tile support via OpenLayers 2, OpenLayers 3 and Leaflet
    - XYZ vector tile example using OpenLayers 3
 - Fix: schemas.html and classes.html only showing one item for a multi-schema or multi-class feature source
 - New REST API routes
    - GET /library/{resourcePath}.MapDefinition/xyz/{group}/{z}/{x}/{y}/tile.{format} (fetch a image or vector XYZ tile for the given group of the given Map Definition for the given X, Y and Z values)
    - GET /session/{session}/{mapName}.Map/description.{type} (fetch a runtime map description as XML or JSON)
    - GET /session/{session}/{mapName}.Map/legendimage.{type} (renders a legend image of the given map)
 - Creating or describing a Runtime Map will now use native APIs if MapGuide Server is 2.6 or newer.

0.7
===

 - New Access Control List support for published data sources
 - Published data sources now have automatic API documentation that's accessible via /doc/index.html for that particular URI
 - Improved HTML representation for resource listings
 - Session IDs can now be embedded into XML envelopes for inserting/updating features allowing you to do such operations without having to supply credentials
 - New REST API routes:
    - GET /library/{resourcePath}.WebLayout/viewer (Load the given Web Layout into the AJAX viewer)
    - GET /library/{resourcePath}.ApplicationDefinition/viewer/{template} (Load the given Flexible Layout in Fusion with the given template)
    - POST /library (Load a package file into the repository)
    - GET /services/getschemamapping.{type} (Get the schema mapping for a given FDO provider and partial connection string)
    - GET /library/{resourcePath}.FeatureSource/preview (Launch a schema report preview on the given Feature Source)
    - GET /library/{resourcePath}.LayerDefinition/preview (Launch a AJAX viewer preview of the given Layer Definition)
    - GET /library/{resourcePath}.MapDefinition/preview (Launch a AJAX viewer preview of the given Map Definition)
    - GET /library/{resourcePath}.SymbolDefinition/preview (Render a preview of the given Symbol Definition)
    - GET /library/{resourcePath}.WatermarkDefinition/preview (Launch a AJAX viewer preview of the given Watermark Definition)
    - GET /session/{sessionId}/{resourceName}.WebLayout/viewer (Load the given Web Layout into the AJAX viewer)
    - GET /session/{sessionId}/{resourceName}.ApplicationDefinition/viewer/{template} (Load the given Flexible Layout in Fusion with the given template)
    - GET /session/{sessionId}/{resourceName}.FeatureSource/preview (Launch a schema report preview on the given Feature Source)
    - GET /session/{sessionId}/{resourceName}.LayerDefinition/preview (Launch a AJAX viewer preview of the given Layer Definition)
    - GET /session/{sessionId}/{resourceName}.MapDefinition/preview (Launch a AJAX viewer preview of the given Map Definition)
    - GET /session/{sessionId}/{resourceName}.SymbolDefinition/preview (Render a preview of the given Symbol Definition)
    - GET /session/{sessionId}/{resourceName}.WatermarkDefinition/preview (Launch a AJAX viewer preview of the given Watermark Definition)
 - Fix: PHP crash on IIS for routes with unicode characters

0.6
===

First public release